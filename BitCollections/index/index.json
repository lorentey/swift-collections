{"interfaceLanguages":{"swift":[{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Collection Views","type":"groupMarker"},{"children":[{"title":"Collection Views","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/uncounted","title":"var uncounted: BitSet","type":"property"},{"title":"Creating a Set","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init(reservingcapacity:)","title":"init(reservingCapacity: Int)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(_:)-15cws","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(_:)-38hho","title":"init(Range<Int>)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(_:)-2of3i","title":"init(BitSet.Counted)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(_:)-5fhls","title":"init(BitArray)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init(bitpattern:)","title":"init<I>(bitPattern: I)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init(words:)","title":"init<S>(words: S)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/random(upto:)","title":"static func random(upTo: Int) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/random(upto:using:)","title":"static func random<R>(upTo: Int, using: inout R) -> BitSet.Counted","type":"method"},{"title":"Finding Elements","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/contains(_:)","title":"func contains(Int) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"title":"Adding and Updating Elements","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/insert(_:)","title":"func insert(Int) -> (inserted: Bool, memberAfterInsert: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/update(with:)","title":"func update(with: Int) -> Int?","type":"method"},{"title":"Removing Elements","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/filter(_:)","title":"func filter((Element) throws -> Bool) rethrows -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/remove(_:)","title":"func remove(Int) -> Int?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/remove(at:)","title":"func remove(at: Index) -> Int","type":"method"},{"title":"Sorted Set Operations","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subscript(member:)","title":"subscript(member _: Int) -> Bool","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/subscript(members:)-5nkxk","title":"subscript(members _: Range<Int>) -> Slice<BitSet>","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/subscript(members:)-5xfq5","title":"subscript<R>(members _: R) -> Slice<BitSet>","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/min()","title":"func min() -> Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/max()","title":"func max() -> Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/sorted()","title":"func sorted() -> BitSet.Counted","type":"method"},{"title":"Binary Set Operations","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/intersection(_:)-1wfb5","title":"func intersection(BitSet.Counted) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/intersection(_:)-4evdp","title":"func intersection(BitSet) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/intersection(_:)-9rtcc","title":"func intersection(Range<Int>) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/intersection(_:)-13us","title":"func intersection<S>(S) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/union(_:)-2okwt","title":"func union(BitSet.Counted) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/union(_:)-pwqf","title":"func union(BitSet) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/union(_:)-18u31","title":"func union(Range<Int>) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/union(_:)-8ysz9","title":"func union<S>(S) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtracting(_:)-7u4tf","title":"func subtracting(BitSet.Counted) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtracting(_:)-5vgml","title":"func subtracting(BitSet) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtracting(_:)-6scy1","title":"func subtracting(Range<Int>) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtracting(_:)-82loi","title":"func subtracting<S>(S) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/symmetricdifference(_:)-84e40","title":"func symmetricDifference(BitSet.Counted) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/symmetricdifference(_:)-3suo3","title":"func symmetricDifference(BitSet) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/symmetricdifference(_:)-7zx5q","title":"func symmetricDifference(Range<Int>) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/symmetricdifference(_:)-46ni1","title":"func symmetricDifference<S>(S) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formintersection(_:)-49and","title":"func formIntersection(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formintersection(_:)-49a0x","title":"func formIntersection(BitSet)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formintersection(_:)-79anv","title":"func formIntersection(Range<Int>)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formintersection(_:)-3zoc4","title":"func formIntersection<S>(S)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formunion(_:)-c6a3","title":"func formUnion(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formunion(_:)-c5kv","title":"func formUnion(BitSet)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formunion(_:)-2f05x","title":"func formUnion(Range<Int>)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formunion(_:)-8kilf","title":"func formUnion<S>(S)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtract(_:)-2hzty","title":"func subtract(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtract(_:)-2i1qq","title":"func subtract(BitSet)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtract(_:)-32jtb","title":"func subtract(Range<Int>)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtract(_:)-75xgt","title":"func subtract<S>(S)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formsymmetricdifference(_:)-6vskl","title":"func formSymmetricDifference(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formsymmetricdifference(_:)-6vs05","title":"func formSymmetricDifference(BitSet)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formsymmetricdifference(_:)-d2kd","title":"func formSymmetricDifference(Range<Int>)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formsymmetricdifference(_:)-54ghn","title":"func formSymmetricDifference<S>(S)","type":"method"},{"title":"Binary Set Predicates","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isequalset(to:)-11031","title":"func isEqualSet(to: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isequalset(to:)-1hvpp","title":"func isEqualSet(to: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isequalset(to:)-1mvpq","title":"func isEqualSet(to: BitSet) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isequalset(to:)-878x1","title":"func isEqualSet<S>(to: S) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issubset(of:)-8iy8c","title":"func isSubset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issubset(of:)-1r41b","title":"func isSubset(of: BitSet) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issubset(of:)-1dz0p","title":"func isSubset(of: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issubset(of:)-3bq5m","title":"func isSubset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issuperset(of:)-48i5c","title":"func isSuperset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issuperset(of:)-10gu8","title":"func isSuperset(of: BitSet) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issuperset(of:)-8b7lq","title":"func isSuperset(of: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issuperset(of:)-6slai","title":"func isSuperset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isstrictsubset(of:)-5ry1b","title":"func isStrictSubset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isstrictsubset(of:)-2ndu3","title":"func isStrictSubset(of: BitSet) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isstrictsubset(of:)-9iul0","title":"func isStrictSubset(of: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isstrictsubset(of:)-2pq1j","title":"func isStrictSubset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isstrictsuperset(of:)-9mgmd","title":"func isStrictSuperset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isstrictsuperset(of:)-6hw4t","title":"func isStrictSuperset(of: BitSet) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isstrictsuperset(of:)-1ya0j","title":"func isStrictSuperset(of: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isstrictsuperset(of:)-4qt1e","title":"func isStrictSuperset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isdisjoint(with:)-9wyku","title":"func isDisjoint(with: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isdisjoint(with:)-5fww0","title":"func isDisjoint(with: BitSet) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isdisjoint(with:)-6p0t7","title":"func isDisjoint(with: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isdisjoint(with:)-eujj","title":"func isDisjoint<S>(with: S) -> Bool","type":"method"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init(_:)-2qctx","title":"init(BitSet)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init(_:)-64b0g","title":"init(Range<Int>)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init(_:)-8uiqs","title":"init(BitArray)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subscript(members:)-2lwsl","title":"subscript(members _: Range<Int>) -> Slice<BitSet>","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subscript(members:)-6hw0h","title":"subscript<R>(members _: R) -> Slice<BitSet>","type":"subscript"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/distance(from:to:)","title":"func distance(from: Index, to: Index) -> Int","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/firstrange(of:)-8etu6","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/index(_:offsetby:)","title":"func index(Index, offsetBy: Int) -> Index","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/index(_:offsetby:limitedby:)","title":"func index(Index, offsetBy: Int, limitedBy: Index) -> Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/index(before:)","title":"func index(before: Index) -> Index","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/count-3ou1i","title":"var count: Int","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/count-d4d1","title":"var count: Int","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isempty-24g67","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isempty-6spu3","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/underestimatedcount-248cp","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/firstrange(of:)-8eqld","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/map(_:)-588hz","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subscript(_:)-1op9f","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subscript(_:)-22d9w","title":"subscript(Index) -> Int","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subscript(_:)-5ijog","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subscript(_:)-86wz2","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/index","title":"BitSet.Counted.Index","type":"typealias"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init(arrayliteral:)-9wfv3","title":"init(arrayLiteral: Int...)","type":"init"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/underestimatedcount-1x0hr","title":"var underestimatedCount: Int","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/underestimatedcount-3av9j","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/flatmap(_:)-679pk","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/flatmap(_:)-9rbhw","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/makeiterator()","title":"func makeIterator() -> BitSet.Iterator","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/map(_:)-55fqf","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/iterator","title":"BitSet.Counted.Iterator","type":"typealias"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init(_:)-5lt57","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init(_:)-7ht6m","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/init(arrayliteral:)-8nws5","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isempty-91ksn","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/contains(_:)","title":"func contains(Int) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formintersection(_:)-49and","title":"func formIntersection(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formsymmetricdifference(_:)-6vskl","title":"func formSymmetricDifference(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/formunion(_:)-c6a3","title":"func formUnion(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/insert(_:)","title":"func insert(Int) -> (inserted: Bool, memberAfterInsert: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/intersection(_:)-1wfb5","title":"func intersection(BitSet.Counted) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isdisjoint(with:)-99yhg","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isdisjoint(with:)-9wyku","title":"func isDisjoint(with: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isstrictsubset(of:)-6u8zv","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/isstrictsuperset(of:)-1ukh5","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issubset(of:)-82qre","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issubset(of:)-8iy8c","title":"func isSubset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issuperset(of:)-24ubd","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/issuperset(of:)-48i5c","title":"func isSuperset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/remove(_:)","title":"func remove(Int) -> Int?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtract(_:)-1j76r","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtract(_:)-2hzty","title":"func subtract(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtracting(_:)-6xodd","title":"func subtracting(Self) -> Self","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/subtracting(_:)-7u4tf","title":"func subtracting(BitSet.Counted) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/symmetricdifference(_:)-84e40","title":"func symmetricDifference(BitSet.Counted) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/union(_:)-2okwt","title":"func union(BitSet.Counted) -> BitSet.Counted","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/update(with:)","title":"func update(with: Int) -> Int?","type":"method"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/bitcollections\/bitset\/counted-swift.struct","title":"BitSet.Counted","type":"struct"},{"path":"\/documentation\/bitcollections\/bitset\/counted-swift.property","title":"var counted: BitSet.Counted","type":"property"},{"title":"Creating a Set","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(reservingcapacity:)","title":"init(reservingCapacity: Int)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(_:)-15cws","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(_:)-38hho","title":"init(Range<Int>)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(_:)-2of3i","title":"init(BitSet.Counted)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(_:)-5fhls","title":"init(BitArray)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(bitpattern:)","title":"init<I>(bitPattern: I)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(words:)","title":"init<S>(words: S)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/random(upto:)","title":"static func random(upTo: Int) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/random(upto:using:)","title":"static func random<R>(upTo: Int, using: inout R) -> BitSet","type":"method"},{"title":"Finding Elements","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/contains(_:)","title":"func contains(Int) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"title":"Adding and Updating Elements","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/insert(_:)","title":"func insert(Int) -> (inserted: Bool, memberAfterInsert: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/update(with:)","title":"func update(with: Int) -> Int?","type":"method"},{"title":"Removing Elements","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/filter(_:)","title":"func filter((Element) throws -> Bool) rethrows -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/remove(_:)","title":"func remove(Int) -> Int?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/remove(at:)","title":"func remove(at: Index) -> Element","type":"method"},{"title":"Sorted Set Operations","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/subscript(member:)","title":"subscript(member _: Int) -> Bool","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/subscript(members:)-5nkxk","title":"subscript(members _: Range<Int>) -> Slice<BitSet>","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/subscript(members:)-5xfq5","title":"subscript<R>(members _: R) -> Slice<BitSet>","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/min()","title":"func min() -> Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/max()","title":"func max() -> Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/sorted()","title":"func sorted() -> BitSet","type":"method"},{"title":"Combining Sets","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/intersection(_:)-84q4u","title":"func intersection(`Self`) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/intersection(_:)-8hcl9","title":"func intersection(BitSet.Counted) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/intersection(_:)-7l8p3","title":"func intersection(Range<Int>) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/intersection(_:)-7kgi","title":"func intersection<S>(S) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/union(_:)-5kqmx","title":"func union(`Self`) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/union(_:)-6mj8","title":"func union(BitSet.Counted) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/union(_:)-50wc4","title":"func union(Range<Int>) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/union(_:)-10had","title":"func union<S>(S) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtracting(_:)-79e0o","title":"func subtracting(`Self`) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtracting(_:)-7re82","title":"func subtracting(Range<Int>) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtracting(_:)-7rn26","title":"func subtracting(BitSet.Counted) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtracting(_:)-42s7d","title":"func subtracting<S>(S) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/symmetricdifference(_:)-55kqn","title":"func symmetricDifference(`Self`) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/symmetricdifference(_:)-5xt65","title":"func symmetricDifference(Counted) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/symmetricdifference(_:)-91kh8","title":"func symmetricDifference(Range<Int>) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/symmetricdifference(_:)-79wfx","title":"func symmetricDifference<S>(S) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formintersection(_:)-u07v","title":"func formIntersection(`Self`)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formintersection(_:)-87gjl","title":"func formIntersection(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formintersection(_:)-9gffv","title":"func formIntersection(Range<Int>)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formintersection(_:)-8t2je","title":"func formIntersection<S>(S)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formunion(_:)-72o7q","title":"func formUnion(`Self`)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formunion(_:)-370hb","title":"func formUnion(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formunion(_:)-7tw8j","title":"func formUnion(Range<Int>)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formunion(_:)-12ll3","title":"func formUnion<S>(S)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtract(_:)-9aabm","title":"func subtract(`Self`)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtract(_:)-1o083","title":"func subtract(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtract(_:)-6kijg","title":"func subtract(Range<Int>)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtract(_:)-3pynh","title":"func subtract<S>(S)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formsymmetricdifference(_:)-2le2k","title":"func formSymmetricDifference(`Self`)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formsymmetricdifference(_:)-5edyr","title":"func formSymmetricDifference(BitSet.Counted)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formsymmetricdifference(_:)-7wole","title":"func formSymmetricDifference(Range<Int>)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formsymmetricdifference(_:)-8vcnf","title":"func formSymmetricDifference<S>(S)","type":"method"},{"title":"Comparing Sets","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/isequalset(to:)-4xfa9","title":"func isEqualSet(to: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isequalset(to:)-359ao","title":"func isEqualSet(to: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isequalset(to:)-5ap6y","title":"func isEqualSet(to: BitSet.Counted) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isequalset(to:)-2dezf","title":"func isEqualSet<S>(to: S) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issubset(of:)-73apg","title":"func isSubset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issubset(of:)-14xt1","title":"func isSubset(of: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issubset(of:)-4mj71","title":"func isSubset(of: BitSet.Counted) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issubset(of:)-20wxs","title":"func isSubset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issuperset(of:)-1mfg2","title":"func isSuperset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issuperset(of:)-5adir","title":"func isSuperset(of: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issuperset(of:)-4y68t","title":"func isSuperset(of: BitSet.Counted) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issuperset(of:)-2m7mj","title":"func isSuperset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isstrictsubset(of:)-8m1z6","title":"func isStrictSubset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isstrictsubset(of:)-3y2l1","title":"func isStrictSubset(of: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isstrictsubset(of:)-97rky","title":"func isStrictSubset(of: BitSet.Counted) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isstrictsubset(of:)-p3zj","title":"func isStrictSubset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isstrictsuperset(of:)-6e5gm","title":"func isStrictSuperset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isstrictsuperset(of:)-735zn","title":"func isStrictSuperset(of: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isstrictsuperset(of:)-26acy","title":"func isStrictSuperset(of: BitSet.Counted) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isstrictsuperset(of:)-5jmxx","title":"func isStrictSuperset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isdisjoint(with:)-2cdg6","title":"func isDisjoint(with: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isdisjoint(with:)-3klxy","title":"func isDisjoint(with: Range<Int>) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isdisjoint(with:)-4uidy","title":"func isDisjoint(with: BitSet.Counted) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isdisjoint(with:)-78a8w","title":"func isDisjoint<S>(with: S) -> Bool","type":"method"},{"title":"Memory Management","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/reservecapacity(_:)","title":"func reserveCapacity(Int)","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/firstrange(of:)-4wtx9","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formindex(before:)","title":"func formIndex(before: inout Self.Index)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/index(before:)","title":"func index(before: Index) -> Index","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/bitcollections\/bitset\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/index\/'...(_:)-60ckz","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/index\/'...(_:)-7ac1","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/index\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/index\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/index\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/index\/_(_:_:)-22q0b","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/index\/_(_:_:)-8ldyc","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/index\/_=(_:_:)-5p09t","title":"static func >= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/index\/_=(_:_:)-7xhbk","title":"static func <= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/bitcollections\/bitset\/index\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/index\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/bitcollections\/bitset\/index\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/index\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/bitcollections\/bitset\/index\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/index\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/index\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/bitcollections\/bitset\/index\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/index\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/bitcollections\/bitset\/index\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/bitcollections\/bitset\/index","title":"BitSet.Index","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/count-3niys","title":"var count: Int","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/count-978gi","title":"var count: Int","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/isempty-1k7aw","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/isempty-7kk7n","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/underestimatedcount-1jmfw","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/distance(from:to:)","title":"func distance(from: Index, to: Index) -> Int","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/firstrange(of:)-5go5","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formindex(after:)","title":"func formIndex(after: inout Self.Index)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/index(_:offsetby:)","title":"func index(Index, offsetBy: Int) -> Index","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/index(_:offsetby:limitedby:)","title":"func index(Index, offsetBy: Int, limitedBy: Index) -> Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/map(_:)-500ox","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/subscript(_:)-2fwcz","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/subscript(_:)-6zu2","title":"subscript(Index) -> Int","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/subscript(_:)-78z4s","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitset\/subscript(_:)-9tuwd","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"}],"path":"\/documentation\/bitcollections\/bitset\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/bitcollections\/bitset\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/bitcollections\/bitset\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/bitcollections\/bitset\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/bitcollections\/bitset\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/bitcollections\/bitset\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/bitcollections\/bitset\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/bitcollections\/bitset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/init(arrayliteral:)-4vvyf","title":"init(arrayLiteral: Int...)","type":"init"}],"path":"\/documentation\/bitcollections\/bitset\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/bitcollections\/bitset\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/iterator\/next()","title":"func next() -> Int?","type":"method"}],"path":"\/documentation\/bitcollections\/bitset\/iterator","title":"BitSet.Iterator","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/underestimatedcount-1w56a","title":"var underestimatedCount: Int","type":"property"},{"path":"\/documentation\/bitcollections\/bitset\/underestimatedcount-4vzhm","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/flatmap(_:)-3jtpc","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/flatmap(_:)-6wlgd","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/makeiterator()","title":"func makeIterator() -> Iterator","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/map(_:)-19z2k","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/element","title":"BitSet.Element","type":"typealias"}],"path":"\/documentation\/bitcollections\/bitset\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(_:)-15cws","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(_:)-3lw1a","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/bitcollections\/bitset\/init(arrayliteral:)-1r6ks","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/isempty-8ey75","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitset\/contains(_:)","title":"func contains(Int) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formintersection(_:)-u07v","title":"func formIntersection(`Self`)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formsymmetricdifference(_:)-2le2k","title":"func formSymmetricDifference(`Self`)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/formunion(_:)-72o7q","title":"func formUnion(`Self`)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/insert(_:)","title":"func insert(Int) -> (inserted: Bool, memberAfterInsert: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/intersection(_:)-84q4u","title":"func intersection(`Self`) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isdisjoint(with:)-11gjk","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isdisjoint(with:)-2cdg6","title":"func isDisjoint(with: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isstrictsubset(of:)-nnde","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/isstrictsuperset(of:)-6gx0i","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issubset(of:)-31szm","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issubset(of:)-73apg","title":"func isSubset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issuperset(of:)-1mfg2","title":"func isSuperset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/issuperset(of:)-50mev","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/remove(_:)","title":"func remove(Int) -> Int?","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtract(_:)-6oq3h","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtract(_:)-9aabm","title":"func subtract(`Self`)","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtracting(_:)-64cfb","title":"func subtracting(Self) -> Self","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/subtracting(_:)-79e0o","title":"func subtracting(`Self`) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/symmetricdifference(_:)-55kqn","title":"func symmetricDifference(`Self`) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/union(_:)-5kqmx","title":"func union(`Self`) -> BitSet","type":"method"},{"path":"\/documentation\/bitcollections\/bitset\/update(with:)","title":"func update(with: Int) -> Int?","type":"method"}],"path":"\/documentation\/bitcollections\/bitset\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/bitcollections\/bitset","title":"BitSet","type":"struct"},{"children":[{"title":"Creating a Bit Array","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bitcollections\/bitarray\/init(_:)-2y0wv","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/bitcollections\/bitarray\/init(repeating:count:)-4j5yd","title":"init(repeating: Bool, count: Int)","type":"init"},{"path":"\/documentation\/bitcollections\/bitarray\/init(_:)-6ldyw","title":"init(BitArray)","type":"init"},{"path":"\/documentation\/bitcollections\/bitarray\/init(_:)-4tksd","title":"init(BitArray.SubSequence)","type":"init"},{"path":"\/documentation\/bitcollections\/bitarray\/init(_:)-765d2","title":"init(BitSet)","type":"init"},{"path":"\/documentation\/bitcollections\/bitarray\/init(bitpattern:)","title":"init<I>(bitPattern: I)","type":"init"},{"path":"\/documentation\/bitcollections\/bitarray\/random(count:)","title":"static func random(count: Int) -> BitArray","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/random(count:using:)","title":"static func random<R>(count: Int, using: inout R) -> BitArray","type":"method"},{"title":"Accessing Elements","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/subscript(_:)-51ccj","title":"subscript(Int) -> Bool","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitarray\/subscript(_:)-944vg","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitarray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/bitcollections\/bitarray\/last","title":"var last: Self.Element?","type":"property"},{"title":"Adding Elements","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/append(_:)-8dqhn","title":"func append(Bool)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/append(contentsof:)-18dwf","title":"func append(contentsOf: BitArray)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/append(contentsof:)-576q4","title":"func append(contentsOf: BitArray.SubSequence)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/append(contentsof:)-8xkr8","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/insert(_:at:)-9t4hf","title":"func insert(Bool, at: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/insert(contentsof:at:)-7e1xn","title":"func insert<C>(contentsOf: C, at: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/insert(contentsof:at:)-35dp3","title":"func insert(contentsOf: BitArray, at: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/insert(contentsof:at:)-1wsgw","title":"func insert(contentsOf: BitArray.SubSequence, at: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/truncateorextend(tocount:with:)","title":"func truncateOrExtend(toCount: Int, with: Bool)","type":"method"},{"title":"Removing Elements","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/remove(at:)-7ij12","title":"func remove(at: Int) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removeall(keepingcapacity:)-5tkge","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removeall(where:)-7tv7z","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removesubrange(_:)-86ou8","title":"func removeSubrange(Range<Int>)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removesubrange(_:)-18qe7","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removefirst()-dcsp","title":"func removeFirst() -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removefirst(_:)-9nqlo","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"title":"Replacing Elements","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/fill(in:with:)","title":"func fill(in: Range<Int>, with: Bool)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/fill(with:)","title":"func fill(with: Bool)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/replacesubrange(_:with:)-163u2","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/replacesubrange(_:with:)-875d8","title":"func replaceSubrange<C>(Range<Int>, with: C)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/replacesubrange(_:with:)-2i7lu","title":"func replaceSubrange(Range<Int>, with: BitArray)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/replacesubrange(_:with:)-b5ou","title":"func replaceSubrange(Range<Int>, with: BitArray.SubSequence)","type":"method"},{"title":"Bitwise Operators","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/&(_:_:)","title":"static func & (`Self`, `Self`) -> BitArray","type":"op"},{"path":"\/documentation\/bitcollections\/bitarray\/_(_:_:)-1rhw","title":"static func | (`Self`, `Self`) -> BitArray","type":"op"},{"path":"\/documentation\/bitcollections\/bitarray\/_(_:_:)-56s54","title":"static func ^ (`Self`, `Self`) -> BitArray","type":"op"},{"path":"\/documentation\/bitcollections\/bitarray\/~(_:)","title":"static func ~ (`Self`) -> BitArray","type":"op"},{"path":"\/documentation\/bitcollections\/bitarray\/&=(_:_:)","title":"static func &= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/bitcollections\/bitarray\/_=(_:_:)-69yf0","title":"static func |= (inout `Self`, `Self`)","type":"op"},{"path":"\/documentation\/bitcollections\/bitarray\/_=(_:_:)-icef","title":"static func ^= (inout `Self`, `Self`)","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/last","title":"var last: Self.Element?","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/difference(from:)","title":"func difference<C>(from: C) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/difference(from:by:)","title":"func difference<C>(from: C, by: (C.Element, Self.Element) -> Bool) -> CollectionDifference<Self.Element>","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/last(where:)","title":"func last(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/lastindex(of:)","title":"func lastIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/lastindex(where:)","title":"func lastIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/reversed()","title":"func reversed() -> ReversedCollection<Self>","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"}],"path":"\/documentation\/bitcollections\/bitarray\/bidirectionalcollection-implementations","title":"BidirectionalCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/count-632yo","title":"var count: Int","type":"property"},{"path":"\/documentation\/bitcollections\/bitarray\/count-8fw0s","title":"var count: Int","type":"property"},{"path":"\/documentation\/bitcollections\/bitarray\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/bitcollections\/bitarray\/isempty","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/bitcollections\/bitarray\/underestimatedcount-4z97u","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/makeiterator()","title":"func makeIterator() -> IndexingIterator<Self>","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/map(_:)-9oqe7","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/subscript(_:)-3n85s","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitarray\/subscript(_:)-7qchl","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitarray\/subscript(_:)-944vg","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"}],"path":"\/documentation\/bitcollections\/bitarray\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/bitcollections\/bitarray\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/bitcollections\/bitarray\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/bitcollections\/bitarray\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/bitcollections\/bitarray\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/bitcollections\/bitarray\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/bitcollections\/bitarray\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/bitcollections\/bitarray\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/init(arrayliteral:)","title":"init(arrayLiteral: Bool...)","type":"init"}],"path":"\/documentation\/bitcollections\/bitarray\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/bitcollections\/bitarray\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/partition(by:)-66qcj","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/partition(by:)-73z2d","title":"func partition(by: (Self.Element) throws -> Bool) rethrows -> Self.Index","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/reverse()","title":"func reverse()","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/shuffle()","title":"func shuffle()","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/shuffle(using:)","title":"func shuffle<T>(using: inout T)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/sort(by:)","title":"func sort(by: (Self.Element, Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/swapat(_:_:)","title":"func swapAt(Self.Index, Self.Index)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/withcontiguousmutablestorageifavailable(_:)","title":"func withContiguousMutableStorageIfAvailable<R>((inout UnsafeMutableBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/subscript(_:)-2v0ui","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitarray\/subscript(_:)-521bv","title":"subscript(Range<Self.Index>) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitarray\/subscript(_:)-6x63c","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitarray\/subscript(_:)-8sw26","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/bitcollections\/bitarray\/subscript(_:)-8u1z0","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"}],"path":"\/documentation\/bitcollections\/bitarray\/mutablecollection-implementations","title":"MutableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/endindex","title":"var endIndex: Int","type":"property"},{"path":"\/documentation\/bitcollections\/bitarray\/startindex","title":"var startIndex: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/distance(from:to:)","title":"func distance(from: Int, to: Int) -> Int","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/formindex(after:)","title":"func formIndex(after: inout Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/formindex(before:)","title":"func formIndex(before: inout Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/index(_:offsetby:)","title":"func index(Int, offsetBy: Int) -> Int","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/index(_:offsetby:limitedby:)","title":"func index(Index, offsetBy: Int, limitedBy: Index) -> Index?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/index(after:)","title":"func index(after: Int) -> Int","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/index(before:)","title":"func index(before: Int) -> Int","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/subscript(_:)-51ccj","title":"subscript(Int) -> Bool","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/index","title":"BitArray.Index","type":"typealias"},{"path":"\/documentation\/bitcollections\/bitarray\/indices","title":"BitArray.Indices","type":"typealias"},{"path":"\/documentation\/bitcollections\/bitarray\/subsequence","title":"BitArray.SubSequence","type":"typealias"}],"path":"\/documentation\/bitcollections\/bitarray\/randomaccesscollection-implementations","title":"RandomAccessCollection Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/+(_:_:)-1jlfv","title":"static func + <Other>(Other, Self) -> Self","type":"op"},{"path":"\/documentation\/bitcollections\/bitarray\/+(_:_:)-2jgbm","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/bitcollections\/bitarray\/+(_:_:)-8fuix","title":"static func + <Other>(Self, Other) -> Self","type":"op"},{"path":"\/documentation\/bitcollections\/bitarray\/+=(_:_:)","title":"static func += <Other>(inout Self, Other)","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/init()","title":"init()","type":"init"},{"path":"\/documentation\/bitcollections\/bitarray\/init(_:)-2y0wv","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/bitcollections\/bitarray\/init(_:)-5h29s","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/bitcollections\/bitarray\/init(repeating:count:)-3cyqn","title":"init(repeating: Self.Element, count: Int)","type":"init"},{"path":"\/documentation\/bitcollections\/bitarray\/init(repeating:count:)-4j5yd","title":"init(repeating: Bool, count: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/append(_:)-8dqhn","title":"func append(Bool)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/append(_:)-gl3a","title":"func append(Self.Element)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/append(contentsof:)-3dlp0","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/append(contentsof:)-8xkr8","title":"func append<S>(contentsOf: S)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/applying(_:)","title":"func applying(CollectionDifference<Self.Element>) -> Self?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> Self","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/insert(_:at:)-3zkrk","title":"func insert(Self.Element, at: Self.Index)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/insert(_:at:)-9t4hf","title":"func insert(Bool, at: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/insert(contentsof:at:)-2qngc","title":"func insert<C>(contentsOf: C, at: Self.Index)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/insert(contentsof:at:)-7e1xn","title":"func insert<C>(contentsOf: C, at: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/poplast()","title":"func popLast() -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/remove(at:)-1nta4","title":"func remove(at: Self.Index) -> Self.Element","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/remove(at:)-7ij12","title":"func remove(at: Int) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removeall(keepingcapacity:)-3nf5f","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removeall(keepingcapacity:)-5tkge","title":"func removeAll(keepingCapacity: Bool)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removeall(where:)-4izxo","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removeall(where:)-7tv7z","title":"func removeAll(where: (Self.Element) throws -> Bool) rethrows","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removefirst()-9kjz2","title":"func removeFirst() -> Self.Element","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removefirst()-dcsp","title":"func removeFirst() -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removefirst(_:)-2439d","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removefirst(_:)-9nqlo","title":"func removeFirst(Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removelast()","title":"func removeLast() -> Self.Element","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removelast(_:)","title":"func removeLast(Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removesubrange(_:)-18qe7","title":"func removeSubrange<R>(R)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removesubrange(_:)-6jidj","title":"func removeSubrange(Range<Self.Index>)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/removesubrange(_:)-86ou8","title":"func removeSubrange(Range<Int>)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/replace(_:with:maxreplacements:)","title":"func replace<C, Replacement>(C, with: Replacement, maxReplacements: Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/replacesubrange(_:with:)-163u2","title":"func replaceSubrange<C, R>(R, with: C)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/replacesubrange(_:with:)-77zh5","title":"func replaceSubrange<C>(Range<Self.Index>, with: C)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/replacesubrange(_:with:)-875d8","title":"func replaceSubrange<C>(Range<Int>, with: C)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/replacing(_:with:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/replacing(_:with:subrange:maxreplacements:)","title":"func replacing<C, Replacement>(C, with: Replacement, subrange: Range<Self.Index>, maxReplacements: Int) -> Self","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/reservecapacity(_:)-1uurc","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/reservecapacity(_:)-2gmcr","title":"func reserveCapacity(Int)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/trimprefix(_:)","title":"func trimPrefix<Prefix>(Prefix)","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/trimprefix(while:)","title":"func trimPrefix(while: (Self.Element) throws -> Bool) rethrows","type":"method"}],"path":"\/documentation\/bitcollections\/bitarray\/rangereplaceablecollection-implementations","title":"RangeReplaceableCollection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/bitcollections\/bitarray\/underestimatedcount-6j3j4","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/contains(_:)","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/flatmap(_:)-1l4jb","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/flatmap(_:)-71fvd","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/map(_:)-5trca","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/bitcollections\/bitarray\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/bitcollections\/bitarray\/element","title":"BitArray.Element","type":"typealias"},{"path":"\/documentation\/bitcollections\/bitarray\/iterator","title":"BitArray.Iterator","type":"typealias"}],"path":"\/documentation\/bitcollections\/bitarray\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/bitcollections\/bitarray","title":"BitArray","type":"struct"}],"path":"\/documentation\/bitcollections","title":"BitCollections","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}