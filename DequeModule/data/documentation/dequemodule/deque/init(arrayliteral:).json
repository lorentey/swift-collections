{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":" "},{"kind":"internalParam","text":"elements"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:11DequeModule0A0V7Elementxmfp"},{"kind":"text","text":"...)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"elements","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"A variadic list of elements of the new deque."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not call this initializer directly. It is used by the compiler when"},{"type":"text","text":" "},{"type":"text","text":"you use an array literal. Instead, create a new deque using an array"},{"type":"text","text":" "},{"type":"text","text":"literal as its value by enclosing a comma-separated list of values in"},{"type":"text","text":" "},{"type":"text","text":"square brackets. You can use an array literal anywhere a deque is expected"},{"type":"text","text":" "},{"type":"text","text":"by the type context."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/dequemodule\/deque\/init(arrayliteral:)"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque\/init(arrayLiteral:)","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Creates a new deque from the contents of an array literal."}],"kind":"symbol","metadata":{"role":"symbol","title":"init(arrayLiteral:)","roleHeading":"Initializer","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:11DequeModule0A0V7Elementxmfp"},{"kind":"text","text":"...)"}],"symbolKind":"init","externalID":"s:11DequeModule0A0V12arrayLiteralACyxGxd_tcfc","extendedModule":"DequeModule","modules":[{"name":"DequeModule"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule","doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque","doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque\/ExpressibleByArrayLiteral-Implementations"]]},"references":{"doc://org.swift.swift-collections.DequeModule/documentation/DequeModule/Deque":{"role":"symbol","title":"Deque","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deque"}],"abstract":[{"type":"text","text":"A collection implementing a double-ended queue. "},{"type":"codeVoice","code":"Deque"},{"type":"text","text":" (pronounced “deck”)"},{"type":"text","text":" "},{"type":"text","text":"implements an ordered random-access collection that supports efficient"},{"type":"text","text":" "},{"type":"text","text":"insertions and removals from both ends."}],"identifier":"doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Deque"}],"url":"\/documentation\/dequemodule\/deque"},"doc://org.swift.swift-collections.DequeModule/documentation/DequeModule/Deque/ExpressibleByArrayLiteral-Implementations":{"role":"collectionGroup","title":"ExpressibleByArrayLiteral Implementations","abstract":[],"identifier":"doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque\/ExpressibleByArrayLiteral-Implementations","kind":"article","type":"topic","url":"\/documentation\/dequemodule\/deque\/expressiblebyarrayliteral-implementations"},"doc://org.swift.swift-collections.DequeModule/documentation/DequeModule":{"role":"collection","title":"DequeModule","abstract":[],"identifier":"doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule","kind":"symbol","type":"topic","url":"\/documentation\/dequemodule"},"doc://org.swift.swift-collections.DequeModule/documentation/DequeModule/Deque/init(arrayLiteral:)":{"role":"symbol","title":"init(arrayLiteral:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"arrayLiteral"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Element","preciseIdentifier":"s:11DequeModule0A0V7Elementxmfp"},{"kind":"text","text":"...)"}],"abstract":[{"type":"text","text":"Creates a new deque from the contents of an array literal."}],"identifier":"doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque\/init(arrayLiteral:)","kind":"symbol","type":"topic","url":"\/documentation\/dequemodule\/deque\/init(arrayliteral:)"}}}