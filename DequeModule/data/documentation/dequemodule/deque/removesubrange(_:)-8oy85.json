{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"mutating"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeSubrange"},{"kind":"text","text":"("},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"bounds"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">)"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"parameters","parameters":[{"name":"bounds","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The range of the collection to be removed. The bounds of the"},{"type":"text","text":" "},{"type":"text","text":"range must be valid indices of the collection."}]}]}]},{"kind":"content","content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O("},{"type":"codeVoice","code":"count"},{"type":"text","text":"). Removing elements from the start or end of the"},{"type":"text","text":" "},{"type":"text","text":"deque costs O("},{"type":"codeVoice","code":"bounds.count"},{"type":"text","text":") if the deque’s storage isn’t shared."}]}],"type":"aside","name":"Complexity"}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/dequemodule\/deque\/removesubrange(_:)-8oy85"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque\/removeSubrange(_:)-8oy85","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"All elements following the specified range are (logically) moved up to"},{"type":"text","text":" "},{"type":"text","text":"close the resulting gap. (Internally, the deque may actually decide to"},{"type":"text","text":" "},{"type":"text","text":"shift previous elements forward instead to minimize the number of elements"},{"type":"text","text":" "},{"type":"text","text":"that need to be moved.)"}],"kind":"symbol","metadata":{"role":"symbol","title":"removeSubrange(_:)","roleHeading":"Instance Method","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeSubrange"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">)"}],"symbolKind":"method","externalID":"s:11DequeModule0A0V14removeSubrangeyySnySiGF","extendedModule":"DequeModule","modules":[{"name":"DequeModule"}]},"hierarchy":{"paths":[["doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule","doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque","doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque\/RangeReplaceableCollection-Implementations"]]},"references":{"doc://org.swift.swift-collections.DequeModule/documentation/DequeModule/Deque":{"role":"symbol","title":"Deque","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Deque"}],"abstract":[{"type":"text","text":"A collection implementing a double-ended queue. "},{"type":"codeVoice","code":"Deque"},{"type":"text","text":" (pronounced “deck”)"},{"type":"text","text":" "},{"type":"text","text":"implements an ordered random-access collection that supports efficient"},{"type":"text","text":" "},{"type":"text","text":"insertions and removals from both ends."}],"identifier":"doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Deque"}],"url":"\/documentation\/dequemodule\/deque"},"doc://org.swift.swift-collections.DequeModule/documentation/DequeModule":{"role":"collection","title":"DequeModule","abstract":[],"identifier":"doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule","kind":"symbol","type":"topic","url":"\/documentation\/dequemodule"},"doc://org.swift.swift-collections.DequeModule/documentation/DequeModule/Deque/RangeReplaceableCollection-Implementations":{"role":"collectionGroup","title":"RangeReplaceableCollection Implementations","abstract":[],"identifier":"doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque\/RangeReplaceableCollection-Implementations","kind":"article","type":"topic","url":"\/documentation\/dequemodule\/deque\/rangereplaceablecollection-implementations"},"doc://org.swift.swift-collections.DequeModule/documentation/DequeModule/Deque/removeSubrange(_:)-8oy85":{"role":"symbol","title":"removeSubrange(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"removeSubrange"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Range","preciseIdentifier":"s:Sn"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">)"}],"abstract":[{"type":"text","text":"All elements following the specified range are (logically) moved up to"},{"type":"text","text":" "},{"type":"text","text":"close the resulting gap. (Internally, the deque may actually decide to"},{"type":"text","text":" "},{"type":"text","text":"shift previous elements forward instead to minimize the number of elements"},{"type":"text","text":" "},{"type":"text","text":"that need to be moved.)"}],"identifier":"doc:\/\/org.swift.swift-collections.DequeModule\/documentation\/DequeModule\/Deque\/removeSubrange(_:)-8oy85","kind":"symbol","type":"topic","url":"\/documentation\/dequemodule\/deque\/removesubrange(_:)-8oy85"}}}