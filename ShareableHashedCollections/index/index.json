{"interfaceLanguages":{"swift":[{"children":[{"title":"Persistent Collections","type":"groupMarker"},{"children":[{"title":"Creating a Set","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/init()","title":"init()","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/init(_:)-1qufh","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/init(_:)-49yo2","title":"init(`Self`)","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/init(_:)-56pm1","title":"init<Value>(ShareableDictionary<Element, Value>.Keys)","type":"init"},{"title":"Finding Elements","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/contains(_:)","title":"func contains(Element) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/firstindex(of:)","title":"func firstIndex(of: Element) -> Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/lastindex(of:)","title":"func lastIndex(of: Element) -> Index?","type":"method"},{"title":"Adding and Updating Elements","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/insert(_:)","title":"func insert(Element) -> (inserted: Bool, memberAfterInsert: Element)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/update(with:)","title":"func update(with: Element) -> Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/update(_:at:)","title":"func update(Element, at: Index) -> Element","type":"method"},{"title":"Removing Elements","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/remove(_:)","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/remove(at:)","title":"func remove(at: Index) -> Element","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/filter(_:)","title":"func filter((Element) throws -> Bool) rethrows -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/removeall(where:)","title":"func removeAll(where: (Element) throws -> Bool) rethrows","type":"method"},{"title":"Combining Sets","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/intersection(_:)-8few3","title":"func intersection(`Self`) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/intersection(_:)-61b7q","title":"func intersection<Value>(ShareableDictionary<Element, Value>.Keys) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/intersection(_:)-2ncm4","title":"func intersection<S>(S) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/union(_:)-3e3nw","title":"func union(`Self`) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/union(_:)-8twku","title":"func union<Value>(ShareableDictionary<Element, Value>.Keys) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/union(_:)-9f4y4","title":"func union<S>(S) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subtracting(_:)-6v3hx","title":"func subtracting(`Self`) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subtracting(_:)-zt78","title":"func subtracting<V>(ShareableDictionary<Element, V>.Keys) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subtracting(_:)-9n0oc","title":"func subtracting<S>(S) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/symmetricdifference(_:)-7o2iv","title":"func symmetricDifference(`Self`) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/symmetricdifference(_:)-3jhi3","title":"func symmetricDifference<Value>(ShareableDictionary<Element, Value>.Keys) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/symmetricdifference(_:)-2hxgg","title":"func symmetricDifference<S>(S) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formintersection(_:)-48ki1","title":"func formIntersection(`Self`)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formintersection(_:)-8qfxe","title":"func formIntersection<Value>(ShareableDictionary<Element, Value>.Keys)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formintersection(_:)-nne6","title":"func formIntersection<S>(S)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formunion(_:)-1qwuq","title":"func formUnion(`Self`)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formunion(_:)-2raoj","title":"func formUnion<Value>(ShareableDictionary<Element, Value>.Keys)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formunion(_:)-ew7g","title":"func formUnion<S>(S)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subtract(_:)-24txa","title":"func subtract(`Self`)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subtract(_:)-69g3","title":"func subtract<Value>(ShareableDictionary<Element, Value>.Keys)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subtract(_:)-5l8bb","title":"func subtract<S>(S)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formsymmetricdifference(_:)-6zqa1","title":"func formSymmetricDifference(`Self`)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formsymmetricdifference(_:)-mv0q","title":"func formSymmetricDifference<Value>(ShareableDictionary<Element, Value>.Keys)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formsymmetricdifference(_:)-2qzlu","title":"func formSymmetricDifference<S>(S)","type":"method"},{"title":"Comparing Sets","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isequalset(to:)-5lpwv","title":"func isEqualSet(to: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isequalset(to:)-6ont2","title":"func isEqualSet<Value>(to: ShareableDictionary<Element, Value>.Keys) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isequalset(to:)-58q8h","title":"func isEqualSet<S>(to: S) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/issubset(of:)-2itju","title":"func isSubset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/issubset(of:)-2nice","title":"func isSubset<Value>(of: ShareableDictionary<Element, Value>.Keys) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/issubset(of:)-8qszd","title":"func isSubset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/issuperset(of:)-9mp0j","title":"func isSuperset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/issuperset(of:)-3pm0f","title":"func isSuperset<Value>(of: ShareableDictionary<Element, Value>.Keys) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/issuperset(of:)-63haf","title":"func isSuperset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isstrictsubset(of:)-1cdr","title":"func isStrictSubset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isstrictsubset(of:)-3xlgn","title":"func isStrictSubset<Value>(of: ShareableDictionary<Element, Value>.Keys) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isstrictsubset(of:)-8oyb4","title":"func isStrictSubset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isstrictsuperset(of:)-7qgvz","title":"func isStrictSuperset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isstrictsuperset(of:)-3fdsl","title":"func isStrictSuperset<Value>(of: ShareableDictionary<Element, Value>.Keys) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isstrictsuperset(of:)-2ujyn","title":"func isStrictSuperset<S>(of: S) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isdisjoint(with:)-eq16","title":"func isDisjoint(with: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isdisjoint(with:)-8bgbj","title":"func isDisjoint<Value>(with: ShareableDictionary<Element, Value>.Keys) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isdisjoint(with:)-5b64c","title":"func isDisjoint<S>(with: S) -> Bool","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/'...(_:)-8u3sl","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/'...(_:)-9abds","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/_(_:_:)-3m127","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/_(_:_:)-66eas","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/_=(_:_:)-45irb","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/_=(_:_:)-4i4wq","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/index\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/index","title":"ShareableSet.Index","type":"struct"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/iterator\/next()","title":"func next() -> Element?","type":"method"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/iterator","title":"ShareableSet.Iterator","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/count-17jng","title":"var count: Int","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/count-9y0t1","title":"var count: Int","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isempty-5tse5","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isempty-qr0w","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/underestimatedcount-7yxe8","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/distance(from:to:)","title":"func distance(from: Index, to: Index) -> Int","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formindex(after:)","title":"func formIndex(after: inout Index)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index(_:offsetby:)","title":"func index(Index, offsetBy: Int) -> Index","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index(_:offsetby:limitedby:)","title":"func index(Index, offsetBy: Int, limitedBy: Index) -> Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/makeiterator()","title":"func makeIterator() -> Iterator","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/map(_:)-33v49","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subscript(_:)-172df","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subscript(_:)-1q9cr","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subscript(_:)-3gx5m","title":"subscript(Index) -> Element","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subscript(_:)-50bz4","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/init(arrayliteral:)-4wy92","title":"init(arrayLiteral: Element...)","type":"init"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/expressiblebyarrayliteral-implementations","title":"ExpressibleByArrayLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/underestimatedcount-4r81t","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/flatmap(_:)-927mx","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/flatmap(_:)-o3bp","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/joined(separator:)-1l9f3","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/joined(separator:)-2dwcd","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/map(_:)-6fi67","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/sequence-implementations","title":"Sequence Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/init()","title":"init()","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/init(_:)-1agp5","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/init(_:)-1qufh","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/init(arrayliteral:)-1d9dj","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isempty-8dfni","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/contains(_:)","title":"func contains(Element) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formintersection(_:)-48ki1","title":"func formIntersection(`Self`)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formsymmetricdifference(_:)-6zqa1","title":"func formSymmetricDifference(`Self`)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/formunion(_:)-1qwuq","title":"func formUnion(`Self`)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/insert(_:)","title":"func insert(Element) -> (inserted: Bool, memberAfterInsert: Element)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/intersection(_:)-8few3","title":"func intersection(`Self`) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/isdisjoint(with:)-eq16","title":"func isDisjoint(with: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/issubset(of:)-2itju","title":"func isSubset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/issuperset(of:)-9mp0j","title":"func isSuperset(of: `Self`) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/remove(_:)","title":"func remove(Element) -> Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subtract(_:)-24txa","title":"func subtract(`Self`)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subtract(_:)-45fci","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/subtracting(_:)-6v3hx","title":"func subtracting(`Self`) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/symmetricdifference(_:)-7o2iv","title":"func symmetricDifference(`Self`) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/union(_:)-3e3nw","title":"func union(`Self`) -> ShareableSet<Element>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareableset\/update(with:)","title":"func update(with: Element) -> Element?","type":"method"}],"path":"\/documentation\/shareablehashedcollections\/shareableset\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/shareablehashedcollections\/shareableset","title":"ShareableSet","type":"struct"},{"children":[{"title":"Collection Views","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/contains(_:)","title":"func contains(Element) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/intersection(_:)-4bm","title":"func intersection(ShareableSet<Key>) -> ShareableDictionary<Key, Value>.Keys","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/intersection(_:)-8wuva","title":"func intersection<Value2>(ShareableDictionary<Key, Value2>.Keys) -> ShareableDictionary<Key, Value>.Keys","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/subtracting(_:)-1hsst","title":"func subtracting(ShareableSet<Key>) -> ShareableDictionary<Key, Value>.Keys","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/subtracting(_:)-7lpvn","title":"func subtracting<Value2>(ShareableDictionary<Key, Value2>.Keys) -> ShareableDictionary<Key, Value>.Keys","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/count-7h8uk","title":"var count: Int","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/count-8f6xx","title":"var count: Int","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/isempty-1qe2f","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/isempty-is1c","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/underestimatedcount-8oqgv","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/distance(from:to:)","title":"func distance(from: Index, to: Index) -> Int","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/formindex(after:)","title":"func formIndex(after: inout Index)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/index(_:offsetby:)","title":"func index(Index, offsetBy: Int) -> Index","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/index(_:offsetby:limitedby:)","title":"func index(Index, offsetBy: Int, limitedBy: Index) -> Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/map(_:)-5t6e6","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/subscript(_:)-1ro6e","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/subscript(_:)-5fkf6","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/subscript(_:)-9n24i","title":"subscript(Index) -> Element","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/subscript(_:)-9p2k8","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/index","title":"ShareableDictionary.Keys.Index","type":"typealias"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/iterator\/next()","title":"func next() -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/iterator\/element","title":"ShareableDictionary.Keys.Iterator.Element","type":"typealias"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/iterator","title":"ShareableDictionary.Keys.Iterator","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/underestimatedcount-6bvcy","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/flatmap(_:)-25u1p","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/flatmap(_:)-2hx3z","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/joined(separator:)-8rar2","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/joined(separator:)-jkdn","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/makeiterator()","title":"func makeIterator() -> Iterator","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/map(_:)-955hu","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/element","title":"ShareableDictionary.Keys.Element","type":"typealias"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.struct","title":"ShareableDictionary.Keys","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/count-5dnl1","title":"var count: Int","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/count-9ecpj","title":"var count: Int","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/isempty-44ced","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/isempty-x8sg","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/underestimatedcount-97zd8","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/contains(_:)-2qxlg","title":"func contains<C>(C) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/distance(from:to:)","title":"func distance(from: Index, to: Index) -> Int","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/firstindex(of:)","title":"func firstIndex(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/firstrange(of:)","title":"func firstRange<C>(of: C) -> Range<Self.Index>?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/formindex(after:)","title":"func formIndex(after: inout Index)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/index(_:offsetby:)","title":"func index(Index, offsetBy: Int) -> Index","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/index(_:offsetby:limitedby:)","title":"func index(Index, offsetBy: Int, limitedBy: Index) -> Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/index(of:)","title":"func index(of: Self.Element) -> Self.Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/map(_:)-57gy1","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/ranges(of:)","title":"func ranges<C>(of: C) -> [Range<Self.Index>]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)-57bsl","title":"func split<C>(separator: C, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)-6e01w","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/trimmingprefix(_:)","title":"func trimmingPrefix<Prefix>(Prefix) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/subscript(_:)-5xypz","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/subscript(_:)-64rm1","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/subscript(_:)-6xrt5","title":"subscript(Index) -> Element","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/subscript(_:)-7gza2","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/index","title":"ShareableDictionary.Values.Index","type":"typealias"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/iterator\/next()","title":"func next() -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/iterator\/element","title":"ShareableDictionary.Values.Iterator.Element","type":"typealias"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/iterator","title":"ShareableDictionary.Values.Iterator","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/underestimatedcount-8p3mj","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/contains(_:)-2sx54","title":"func contains(Self.Element) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/elementsequal(_:)","title":"func elementsEqual<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/filter(_:)","title":"func filter((Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/flatmap(_:)-4mz7s","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/flatmap(_:)-9dt92","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/joined()","title":"func joined() -> FlattenSequence<Self>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/joined(separator:)-2ryda","title":"func joined(separator: String) -> String","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/joined(separator:)-7dwuy","title":"func joined<Separator>(separator: Separator) -> JoinedSequence<Self>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/lexicographicallyprecedes(_:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/makeiterator()","title":"func makeIterator() -> Iterator","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/map(_:)-7r8z0","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/max()","title":"func max() -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/min()","title":"func min() -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/sorted()","title":"func sorted() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/split(separator:maxsplits:omittingemptysubsequences:)-5xip","title":"func split(separator: Self.Element, maxSplits: Int, omittingEmptySubsequences: Bool) -> [ArraySlice<Self.Element>]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/starts(with:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/element","title":"ShareableDictionary.Values.Element","type":"typealias"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.struct","title":"ShareableDictionary.Values","type":"struct"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/keys-swift.property","title":"var keys: Keys","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/values-swift.property","title":"var values: Values","type":"property"},{"title":"Creating a Dictionary","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init()","title":"init()","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init(_:)-68s80","title":"init(ShareableDictionary<Key, Value>)","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init(_:)-2ngkk","title":"init(Dictionary<Key, Value>)","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init(uniquekeyswithvalues:)-688fi","title":"init<S>(uniqueKeysWithValues: S)","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init(uniquekeyswithvalues:)-3h2xe","title":"init<S>(uniqueKeysWithValues: S)","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init(_:uniquingkeyswith:)-6t92n","title":"init<S>(S, uniquingKeysWith: (Value, Value) throws -> Value) rethrows","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init(_:uniquingkeyswith:)-9opgv","title":"init<S>(S, uniquingKeysWith: (Value, Value) throws -> Value) rethrows","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init(grouping:by:)-6ddmm","title":"init<S>(grouping: S, by: (S.Element) throws -> Key) rethrows","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init(grouping:by:)-9rc24","title":"init<S>(grouping: S, by: (S.Element) throws -> Key) rethrows","type":"init"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init(keys:valuegenerator:)","title":"init(keys: ShareableSet<Key>, valueGenerator: (Key) throws -> Value) rethrows","type":"init"},{"title":"Inspecting a Dictionary","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/isempty-25p4","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/count-8s588","title":"var count: Int","type":"property"},{"title":"Accessing Keys and Values","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/subscript(_:)-6jbab","title":"subscript(Key) -> Value?","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/subscript(_:default:)","title":"subscript(Key, default _: () -> Value) -> Value","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index(forkey:)","title":"func index(forKey: Key) -> Index?","type":"method"},{"title":"Adding or Updating Keys and Values","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/updatevalue(_:forkey:)","title":"func updateValue(Value, forKey: Key) -> Value?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/updatevalue(forkey:with:)","title":"func updateValue<R>(forKey: Key, with: (inout Value?) throws -> R) rethrows -> R","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/updatevalue(forkey:default:with:)","title":"func updateValue<R>(forKey: Key, default: () -> Value, with: (inout Value) throws -> R) rethrows -> R","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/merge(_:uniquingkeyswith:)-218dc","title":"func merge(`Self`, uniquingKeysWith: (Value, Value) throws -> Value) rethrows","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/merge(_:uniquingkeyswith:)-8gdr2","title":"func merge<S>(S, uniquingKeysWith: (Value, Value) throws -> Value) rethrows","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/merge(_:uniquingkeyswith:)-6j72k","title":"func merge<S>(S, uniquingKeysWith: (Value, Value) throws -> Value) rethrows","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/merging(_:uniquingkeyswith:)-88sah","title":"func merging(`Self`, uniquingKeysWith: (Value, Value) throws -> Value) rethrows -> ShareableDictionary<Key, Value>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/merging(_:uniquingkeyswith:)-2qknu","title":"func merging<S>(S, uniquingKeysWith: (Value, Value) throws -> Value) rethrows -> ShareableDictionary<Key, Value>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/merging(_:uniquingkeyswith:)-3hao7","title":"func merging<S>(S, uniquingKeysWith: (Value, Value) throws -> Value) rethrows -> ShareableDictionary<Key, Value>","type":"method"},{"title":"Removing Keys and Values","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/removevalue(forkey:)","title":"func removeValue(forKey: Key) -> Value?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/remove(at:)","title":"func remove(at: Index) -> Element","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/filter(_:)","title":"func filter((Element) throws -> Bool) rethrows -> ShareableDictionary<Key, Value>","type":"method"},{"title":"Comparing Dictionaries","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"},{"title":"Transforming a Dictionary","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/mapvalues(_:)","title":"func mapValues<T>((Value) throws -> T) rethrows -> ShareableDictionary<Key, T>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/compactmapvalues(_:)","title":"func compactMapValues<T>((Value) throws -> T?) rethrows -> ShareableDictionary<Key, T>","type":"method"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/removeall(where:)","title":"func removeAll(where: (Element) throws -> Bool) rethrows","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/'...(_:)-2yufw","title":"static func ... (Self) -> PartialRangeThrough<Self>","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/'...(_:)-8u1es","title":"static func ... (Self) -> PartialRangeFrom<Self>","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/'...(_:_:)","title":"static func ... (Self, Self) -> ClosedRange<Self>","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/'.._(_:)","title":"static func ..< (Self) -> PartialRangeUpTo<Self>","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/'.._(_:_:)","title":"static func ..< (Self, Self) -> Range<Self>","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/_(_:_:)-69pwm","title":"static func > (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/_(_:_:)-yctb","title":"static func < (`Self`, `Self`) -> Bool","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/_=(_:_:)-1uzuq","title":"static func <= (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/_=(_:_:)-9d5z9","title":"static func >= (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/comparable-implementations","title":"Comparable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index\/hashable-implementations","title":"Hashable Implementations","type":"symbol"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index","title":"ShareableDictionary.Index","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/iterator\/next()","title":"func next() -> Element?","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/iterator\/element","title":"ShareableDictionary.Iterator.Element","type":"typealias"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/iterator\/iteratorprotocol-implementations","title":"IteratorProtocol Implementations","type":"symbol"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/iterator","title":"ShareableDictionary.Iterator","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/count-45a5v","title":"var count: Int","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/count-8s588","title":"var count: Int","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/endindex","title":"var endIndex: Index","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/first","title":"var first: Self.Element?","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/indices","title":"var indices: DefaultIndices<Self>","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/isempty-25p4","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/isempty-68bze","title":"var isEmpty: Bool","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/startindex","title":"var startIndex: Index","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/underestimatedcount-2kdwz","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/distance(from:to:)","title":"func distance(from: Index, to: Index) -> Int","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/drop(while:)","title":"func drop(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/dropfirst(_:)","title":"func dropFirst(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/droplast(_:)","title":"func dropLast(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/firstindex(where:)","title":"func firstIndex(where: (Self.Element) throws -> Bool) rethrows -> Self.Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/formindex(_:offsetby:)","title":"func formIndex(inout Self.Index, offsetBy: Int)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/formindex(_:offsetby:limitedby:)","title":"func formIndex(inout Self.Index, offsetBy: Int, limitedBy: Self.Index) -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/formindex(after:)","title":"func formIndex(after: inout Index)","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index(_:offsetby:)","title":"func index(Index, offsetBy: Int) -> Index","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index(_:offsetby:limitedby:)","title":"func index(Index, offsetBy: Int, limitedBy: Index) -> Index?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/index(after:)","title":"func index(after: Index) -> Index","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/makeiterator()","title":"func makeIterator() -> Iterator","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/map(_:)-4g5l7","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/prefix(_:)","title":"func prefix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/prefix(through:)","title":"func prefix(through: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/prefix(upto:)","title":"func prefix(upTo: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/prefix(while:)","title":"func prefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/randomelement()","title":"func randomElement() -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/randomelement(using:)","title":"func randomElement<T>(using: inout T) -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/split(maxsplits:omittingemptysubsequences:whereseparator:)","title":"func split(maxSplits: Int, omittingEmptySubsequences: Bool, whereSeparator: (Self.Element) throws -> Bool) rethrows -> [Self.SubSequence]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/suffix(_:)","title":"func suffix(Int) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/suffix(from:)","title":"func suffix(from: Self.Index) -> Self.SubSequence","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/trimmingprefix(while:)","title":"func trimmingPrefix(while: (Self.Element) throws -> Bool) rethrows -> Self.SubSequence","type":"method"},{"title":"Subscripts","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/subscript(_:)-16wbt","title":"subscript<R>(R) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/subscript(_:)-3a5ne","title":"subscript((UnboundedRange_) -> ()) -> Self.SubSequence","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/subscript(_:)-69ysb","title":"subscript(Range<Self.Index>) -> Slice<Self>","type":"subscript"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/subscript(_:)-8iaeu","title":"subscript(Index) -> Element","type":"subscript"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/element","title":"ShareableDictionary.Element","type":"typealias"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/collection-implementations","title":"Collection Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/custommirror","title":"var customMirror: Mirror","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/customreflectable-implementations","title":"CustomReflectable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/==(_:_:)","title":"static func == (`Self`, `Self`) -> Bool","type":"op"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/init(dictionaryliteral:)","title":"init(dictionaryLiteral: (Key, Value)...)","type":"init"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/expressiblebydictionaryliteral-implementations","title":"ExpressibleByDictionaryLiteral Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/hash(into:)","title":"func hash(into: inout Hasher)","type":"method"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/hashable-implementations","title":"Hashable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/lazy","title":"var lazy: LazySequence<Self>","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/underestimatedcount-5crxx","title":"var underestimatedCount: Int","type":"property"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/underestimatedcount-7ijr8","title":"var underestimatedCount: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/allsatisfy(_:)","title":"func allSatisfy((Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/compactmap(_:)","title":"func compactMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/contains(where:)","title":"func contains(where: (Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/elementsequal(_:by:)","title":"func elementsEqual<OtherSequence>(OtherSequence, by: (Self.Element, OtherSequence.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/enumerated()","title":"func enumerated() -> EnumeratedSequence<Self>","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/first(where:)","title":"func first(where: (Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/flatmap(_:)-51zia","title":"func flatMap<ElementOfResult>((Self.Element) throws -> ElementOfResult?) rethrows -> [ElementOfResult]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/flatmap(_:)-7akj0","title":"func flatMap<SegmentOfResult>((Self.Element) throws -> SegmentOfResult) rethrows -> [SegmentOfResult.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/foreach(_:)","title":"func forEach((Self.Element) throws -> Void) rethrows","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/lexicographicallyprecedes(_:by:)","title":"func lexicographicallyPrecedes<OtherSequence>(OtherSequence, by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/map(_:)-8ml9f","title":"func map<T>((Self.Element) throws -> T) rethrows -> [T]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/max(by:)","title":"func max(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/min(by:)","title":"func min(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> Self.Element?","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/reduce(_:_:)","title":"func reduce<Result>(Result, (Result, Self.Element) throws -> Result) rethrows -> Result","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/reduce(into:_:)","title":"func reduce<Result>(into: Result, (inout Result, Self.Element) throws -> ()) rethrows -> Result","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/reversed()","title":"func reversed() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/shuffled()","title":"func shuffled() -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/shuffled(using:)","title":"func shuffled<T>(using: inout T) -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/sorted(by:)","title":"func sorted(by: (Self.Element, Self.Element) throws -> Bool) rethrows -> [Self.Element]","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/starts(with:by:)","title":"func starts<PossiblePrefix>(with: PossiblePrefix, by: (Self.Element, PossiblePrefix.Element) throws -> Bool) rethrows -> Bool","type":"method"},{"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/withcontiguousstorageifavailable(_:)","title":"func withContiguousStorageIfAvailable<R>((UnsafeBufferPointer<Self.Element>) throws -> R) rethrows -> R?","type":"method"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary\/sequence-implementations","title":"Sequence Implementations","type":"symbol"}],"path":"\/documentation\/shareablehashedcollections\/shareabledictionary","title":"ShareableDictionary","type":"struct"}],"path":"\/documentation\/shareablehashedcollections","title":"ShareableHashedCollections","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":0}}